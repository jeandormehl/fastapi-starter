services:
  loki:
    image: "grafana/loki:3.5.1"
    container_name: "loki"
    volumes:
      - "./conf/grafana/loki-config.yml:/etc/loki/local-config.yaml"
      - "loki_data:/loki"
    networks:
      - "obs-tier"
    restart: "unless-stopped"
    command: "-config.file=/etc/loki/local-config.yaml"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: "10s"
      timeout: "5s"
      retries: "5"
      start_period: "30s"
    labels:
      - "cluster=obs-stack"

  tempo:
    image: "grafana/tempo:2.8.1"
    container_name: "tempo"
    volumes:
      - "./conf/grafana/tempo-config.yml:/etc/tempo/tempo.yml"
      - "tempo_data:/var/tempo"
    networks:
      - "obs-tier"
    restart: "unless-stopped"
    command: ["-config.file=/etc/tempo/tempo.yml"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3200/ready"]
      interval: "10s"
      timeout: "5s"
      retries: "5"
      start_period: "60s"
    labels:
      - "cluster=obs-stack"

  prometheus:
    image: "prom/prometheus:v2.53.5"
    container_name: "prometheus"
    volumes:
      - "./conf/grafana/prometheus-config.yml:/etc/prometheus/prometheus.yml"
      - "./conf/grafana/alert-rules.yml:/etc/prometheus/alert-rules.yml"
      - "prometheus_data:/prometheus"
    restart: "unless-stopped"
    networks:
      - "obs-tier"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=exemplar-storage'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "-q", "http://localhost:9090/-/ready"]
      interval: "10s"
      timeout: "5s"
      retries: "5"
      start_period: "30s"
    labels:
      - "cluster=obs-stack"

  alertmanager:
    image: "prom/alertmanager:v0.28.1"
    container_name: "alertmanager"
    volumes:
      - "./conf/grafana/alertmanager.yml:/etc/alertmanager/alertmanager.yml"
    restart: "unless-stopped"
    networks:
      - "obs-tier"
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "-q", "http://localhost:9093/-/ready"]
      interval: "10s"
      timeout: "5s"
      retries: "5"
      start_period: "30s"
    labels:
      - "cluster=obs-stack"

  grafana:
    image: "grafana/grafana"
    container_name: "grafana"
    depends_on:
      loki:
        condition: "service_healthy"
      tempo:
        condition: "service_healthy"
      prometheus:
        condition: "service_healthy"
      alertmanager:
        condition: "service_healthy"
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_FEATURE_TOGGLES_ENABLE: "traceqlEditor"
    volumes:
      - "./conf/grafana/provisioning:/etc/grafana/provisioning"
      - "./conf/grafana/dashboards:/etc/grafana/dashboards"
      - "grafana_data:/var/lib/grafana"
    networks:
      - "proxy-tier"
      - "obs-tier"
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: "10s"
      timeout: "5s"
      retries: "5"
    labels:
      - "cluster=obs-stack"

networks:
  proxy-tier:
    name: "proxy-tier"
    driver: "bridge"
  obs-tier:
    name: "obs-tier"
    driver: "bridge"

volumes:
  loki_data:
  tempo_data:
  prometheus_data:
  grafana_data:
